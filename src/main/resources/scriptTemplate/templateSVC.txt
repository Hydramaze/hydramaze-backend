
from sklearn import datasets
from sklearn.cross_validation import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC

loaded_dataset = datasets.load_%dataset%()

X = loaded_dataset.data

#data_set labels
y = loaded_dataset.target

#get class names from dataset
class_names = loaded_dataset.target_names

#split data_set (tain and test)
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = %test_size%)

#declare the classifier
my_classifier = SVC(C=%C%, cache_size=%cache_size%, coef0=%coef0%,
                    degree=%degree%, gamma=%gamma%, kernel="%kernel%", max_iter=%max_iter%,
                    probability=%probability%, shrinking=%shrinking%,
                    tol=%tol%, verbose=%verbose%)

#fit(train) the classifier
my_classifier.fit(X_train, y_train)

#make predictions using the trained classifier
predictions = my_classifier.predict(X_test)

#measure the accuracy of the classifier
accuracy = accuracy_score(y_test, predictions)

#print results (the last line will be used as a json return to the java class)
print "accuracy:", accuracy